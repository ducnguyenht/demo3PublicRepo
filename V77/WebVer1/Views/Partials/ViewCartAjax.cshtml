@inherits WebVer1.Models.CustomInjectDemo
@{
	var rootCartBO = cartService.checkCuponDiscount();
	float sumprice = 0;
	var items = rootCartBO.carts;
	var itemsInBasket = rootCartBO.totalQuantity;
	if (itemsInBasket == 0)
	{
		Response.Redirect("/");
	}
	var session = System.Web.HttpContext.Current.Session;

	<script type="text/javascript">
		$().ready(function () {
			updateCartDisplay = function (totalPrice, itemsInCart) {
				itemsInCart == 0 ? $('.razorEmptyCart').show() : $('.razorEmptyCart').hide();
				$('.tongtien').html(totalPrice);
				$('.tongthanhtien').html(totalPrice);
				$('.count').html(itemsInCart);
			};
			$('.erazorDeleteCartItem').click(function () {
				var id = $(this).parent().find('input#nodeId');
				var pk = $(id).attr('value');
				$.ajax({
					type: "GET",
					url: "/umbraco/surface/CartsSurface/RemoveFromCart",
					contentType: "application/json",
					data: { "pk": pk },
					dataType: "json",
					success: function (data) {
						$.get('/giohangload', function (json) {
							$('.count').html(data);
							$('.cart-list').html(json);
						});
					},
					error: function (data) {
						alert("error");
					}
				});
				return false;
			});
			$('#checkCupon').click(function () {
				var id = $(this).parent().find('input#coupon_code');
				var pk = $('#coupon_code').val();
				$.ajax({
					type: "GET",
					url: "/umbraco/surface/CartsSurface/CheckCupon",
					contentType: "application/json",
					data: { "cupon": pk },
					dataType: "json",
					beforeSend: function () { $('#loadingImg').show(); },
                    complete: function () { $('#loadingImg').hide(); },

					success: function (data) {
						$.get('/giohangload', function (json) {
							//$('.count').html(JSON.parse(res.count));
							$('.cart-list').html(json);
							//$('#khuyenmaitextbox').hide();
							//$('#checkCuponResult').html(data.message);
						});

					},
					error: function (data) {
						alert("error");
					}
				});
				return false;
			});
		});
		function updateval(qty, id) {
			$.ajax({
				type: "GET",
				url: "/umbraco/surface/CartsSurface/UpdateQuantity",
				contentType: "application/json",
				dataType: "json",
				data: { "pk": id, "sl": qty },
				success: function (data) {
					var res = JSON.parse(data);
					$.get('/giohangload', function (json) {
						$('.count').html(JSON.parse(res.count));
						$('.cart-list').html(json);
					});
					if (res.message) {
						title = "Lỗi !";
						message = res.product + " còn: " + res.stock + " ,vui lòng chỉnh lại số lượng hợp lý.";
						opts = {};
						opts.classes = ["gray"];
						container = "#freeow-tr";
						opts.hideStyle = {
							opacity: 0,
							left: "400px"
						};
						opts.showStyle = {
							opacity: 1,
							left: 0
						};
						opts.showStyle = {
							opacity: 1,
							left: 0
						};
						$(container).freeow(title, message, opts);
					} else {
						$('.checkError').hide();
						var title, message, opts, container;
						title = "Đã cập nhật giỏ hàng !";
						message = "Hãy kiểm tra chi tiết lại giỏ hàng.";
						opts = {};
						opts.classes = ["gray"];
						container = "#freeow-tr";
						opts.hideStyle = {
							opacity: 0,
							left: "400px"
						};
						opts.showStyle = {
							opacity: 1,
							left: 0
						};
						$(container).freeow(title, message, opts);
					}
				},
				error: function (data) {
					alert("error");
				}
			});
			return false;
		}</script>
	foreach (var item in items)
	{
		var noidung = "";
		var urlitem = "";
		var idss = item.id;
		var nameitem = item.name;
		if (!string.IsNullOrEmpty(item.description))
		{
			noidung = Extension.RemoveAllHTMLTags(item.description).Length > 250 ? Extension.RemoveAllHTMLTags(item.description).Substring(0, 250) + " ..." : Extension.RemoveAllHTMLTags(item.description);
		}
		var giathanhtien = rootCartBO.totalPrice;
		var image = item.image != "" ? item.image : "Images/noimageb.png";
		<li class="tbody">
			<div class="action td">
				<span>Xóa</span><a href="/" title="Xóa sản phẩm này" class="del-pd erazorDeleteCartItem deleteCartButton"><i class="fa fa-times"></i></a>
				<input type="hidden" id="nodeId" value="@item.id" />
			</div>
			<div class="name">
				<div class="frame-img">
					<a href="@urlitem">
						<img style="width: 100px;" src="@image" alt="@nameitem" class="img-responsive">
					</a>
				</div>
				<div class="cart-product-info">
					<b>@nameitem </b> <br />
					@Html.Raw(noidung.Trim())
				</div>
			</div>
			<div class="unit-price td">
				@if (Session["dsIdOpLung"] != null)
				{
					var arr = Session["dsIdOpLung"] as Newtonsoft.Json.Linq.JArray;
					var check = arr.FirstOrDefault(x => x.Value<string>("pk") == item.id.ToString());
					if (check != null)
					{
						<input type="number" readonly onchange="updateval(this.value,@item.id)" id="quantity" style="width: 60px;" class="erazorUpdateCartItem" value="@item.quantity" name="quantity" />
					}
					else
					{
						<input type="number" onchange="updateval(this.value,@item.id)" id="quantity" style="width: 60px;" class="erazorUpdateCartItem" value="@item.quantity" name="quantity" />
					}
				}
				else
				{
					<input type="number" onchange="updateval(this.value,@item.id)" id="quantity" style="width: 60px;" class="erazorUpdateCartItem" value="@item.quantity" name="quantity" />
				}
			</div>
			@if (item.disCount > 0)
			{
				<div class="price td">
					<span>Đơn giá</span>
					<strike>@string.Format("{0:#,##0 đ}", @item.basePrice)</strike><br />
					@Html.Raw("Giảm giá: " + item.disCount + "%")<br />
					@Html.Raw(string.Format("{0:#,##0 đ}", -item.disCount * item.basePrice / 100))
				</div>
				<div class="total td" style="border:none;">
					<span>Thành tiền</span>
					<strike>@string.Format("{0:#,##0 đ}", @item.total)</strike><br />
					@Html.Raw(string.Format("{0:#,##0 đ}", @item.totalAfterDiscount))
				</div>
			}
			else
			{
				<div class="price td">
					<span>Đơn giá</span>
					@Html.Raw(string.Format("{0:#,##0 đ}", @item.basePrice))
				</div>
				<div class="total td" style="border:none;"><span>Thành tiền</span>@string.Format("{0:#,##0 đ}", @item.total)</div>
			}
		</li>
	}
	sumprice = rootCartBO.totalAfterPriceDisCount;
	var soLuong = rootCartBO.totalQuantity.ToString();

	<li class="tbody all-total">
		<div class="note-cart td" style="padding:5px">
			<div class="coupon" style="padding:0; border-right: none;display: block;text-align: left;">
				@if (session["CuponMessage"] == null)
				{
					<span>Mã khuyến mãi</span><input type="text" name="coupon_code" placeholder="Mã khuyến mãi" id="coupon_code" style="width:auto;text-align: left;"><a class="cart-continue" id="checkCupon" href="javascript:void(0)" title="Thêm" style="margin-left: 10px; padding: 7px; border:1px solid #eee; border-radius: 3px;font-weight: bold;">Thêm</a>
				}
				else
				{
					var message = (KeyValuePair<int, string>)session["CuponMessage"];
					switch (message.Key)
					{
						case 1:
						case 2:
							<p id="checkCuponResult" style="color:red;">@Html.Raw(message.Value)</p>
							break;
						case 3:
						case 4:
						case 5:
							<span>Mã khuyến mãi</span><input type="text" name="coupon_code" placeholder="Mã khuyến mãi" id="coupon_code" style="width:auto;text-align: left;"><a class="cart-continue" id="checkCupon" href="javascript:void(0)" title="Thêm" style="margin-left: 10px; padding: 7px; border:1px solid #eee; border-radius: 3px;font-weight: bold;">Thêm</a>
							<p id="checkCuponResult" style="color:red;">@Html.Raw(message.Value)</p>
							break;
					    
					}
				}
				<img style="display: none;" id="loadingImg" src="/media/1012/load.gif" />

			</div>
		</div>
	</li>
	<li class="tbody all-total">
		<div class="price td hidden-xs ">Tổng tiền</div>
		<div class="total td" style="border:none;">
			<span>Tổng tiền:</span>
			<b style="display: initial;" id="tongthanhtien" class="tongthanhtien">
				@if (rootCartBO.totalPrice - rootCartBO.totalAfterPriceDisCount > 0)
				{
					<strike>@string.Format("{0:#,##0 đ}", rootCartBO.totalPrice)</strike><br />
					@Html.Raw(string.Format("{0:#,##0 đ}", rootCartBO.totalAfterPriceDisCount));
				}
				else
				{
					@Html.Raw(string.Format("{0:#,##0 đ}", rootCartBO.totalPrice));

				}
				@*@string.Format("{0:#,##0 VNĐ}", sumprice)*@
			</b>
		</div>
	</li>
	<li class="tbody bot-cart">
		<div class="col-lg-7">
			<i class="fa fa-shopping-cart hidden-xs"></i>
			<div class="bot-info">
				<p>
					<b style="display: initial;">@Html.Raw(soLuong)</b> sản phẩm - <strong>Tổng tiền:</strong>
					<b style="display: initial;" id="tongthanhtien" class="tongthanhtien">
						@string.Format("{0:#,##0 VNĐ}", sumprice)
					</b>
				</p>
				<p style="color:#999">Phí giao hàng (nếu có) sẽ được tính khi khách hàng nhập địa chỉ giao hàng</p>
				@if (sumprice < 100000)
				{
					<p style="color:red">Chức năng đặt hàng chỉ hỗ trợ với đơn hàng trên 100k.</p>
					<p style="color:red">Vui lòng đặt thêm số lượng.</p>
				}
			</div>
		</div>
		<div class="col-lg-5">

			<a href="/" class="back-web">Tiếp tục chọn mua hàng</a>
			@if (sumprice >= 100000)
			{
				<a href="/dat-hang" class="cont-cart">Đặt hàng</a>
			}
		</div>
	</li>
}
